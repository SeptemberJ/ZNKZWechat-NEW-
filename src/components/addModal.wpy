<style lang="less">
page{
  .addModal{
    .modalMask{
      width: 100vw;
      height: 100vh;
      position: fixed;
      top: 0;
      left: 0;
      background: #000;
      opacity: 0.5;
    }
    .modalMainWrap{
      width: 80%;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      align-items: center;
      position: absolute;
      top: 20%;
      left: 50%;
      transform: translateX(-50%);
      border-radius: 10rpx;
      z-index: 99;
      background: #fff;
      .modalMain{
        width: e("calc(100% - 40rpx)");
        padding: 20rpx 20rpx 0rpx 20rpx;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        .addTit{
          width: 100%;
          height: 50rpx;
          line-height: 20rpx;
          font-size: 34rpx;
          text-align: center;
        }
        .addItem{
          width: 100%;
          height: 80rpx;
          display: flex;
          justify-content: flex-start;
          align-items: center;
          text{
            width: 150rpx;
          }
          input[disabled]{color:#999;opacity:1;border-bottom: 0px;};
          input{
            display: flex;
            flex-grow: 1;
            padding: 0 10rpx;
            border-bottom: 1px solid #efefef;
          }
          image{
            width: 50rpx;
            height: 50rpx;
            display: inline-block;
          }
          picker{
            display: flex;
            justify-content: flex-start;
            align-items: center;
          }
        }
      }
      .BtBlock{
        width: 100%;
        height: 80rpx;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20rpx;
        .Bt{
          width: 50%;
          height: 70rpx;
          display: flex;
          justify-content: center;
          align-items: center;
          font-size: 32rpx;
        }
        .Bt_cancel{
          color: green;
          border-right: 1px solid #efefef;
        }
        .Bt_sure{
          color: red;
        }
      }
    }
  }
}
</style>
<template>
  <view class='addModal'>
    <view class='modalMask'></view>
    <view class='modalMainWrap'>
    <view class='modalMain'>
      <text class='addTit'>{{addType == 0?'添加主控':(addType == 1?'添加从控':'添加设备')}}</text>
      <!-- masterControl -->
      <view class='addItem' wx:if="{{addType == 0}}">
        <text>主控名称</text>
        <input @input="changeMasterControlName" type="text" name="主控名称" disabled="{{addType != 0}}" value="{{masterControl_Name}}" />
      </view>
      <view class='addItem' wx:if="{{addType == 0}}">
        <text>主控码</text>
        <input type="text" name="主控码" disabled value="{{masterControl_Code}}" />
        <image alt="扫码" src="../images/icons/scan.png" @tap="ScanCode(0)"></image>
      </view>
      <!-- secondControl -->
      <view class='addItem' wx:if="{{addType == 1}}">
        <text>从控名称</text>
        <input @input="changeSecondControlName" type="text" name="从控名称" disabled="{{addType != 1}}" value="{{secondControl_Name}}" />
      </view>
      <view class='addItem' wx:if="{{addType == 1}}">
        <text>从控码</text>
        <input type="text" name="从控码" disabled value="{{secondControl_Code}}" />
        <image src="../images/icons/scan.png" @tap="ScanCode(1)"></image>
      </view>
      <!-- equpiment -->
      <view class='addItem' wx:if="{{addType == 2}}">
        <text>设备类型</text>
        <picker bindchange="bindPickerChangeType" value="{{euqipment_Type_index}}" range-key="device_type_name" range="{{TypeList}}">
          <text>{{TypeList[euqipment_Type_index].device_type_name}}</text>
          <image style="width: 30rpx;height: 30rpx;" src="../images/icons/arrow-down.png"></image>
        </picker>
      </view>
      <view class='addItem' wx:if="{{addType == 2}}">
        <text>设备图片</text>
        <picker-view indicator-style="height: 30px;" style="width: 30px; height: 30px;" bindchange="bindChange">
          <picker-view-column>
            <view wx:for-items="{{IconList}}" wx:for-index="IconIdx" wx:for-item="Icon" wx:key="IconIdx" style="line-height: 30px">
              <image style='width:30px;height:30px;' src="{{Icon.img}}"></image>
            </view>
          </picker-view-column>
        </picker-view>
      </view>
      <view class='addItem' wx:if="{{addType == 2}}">
        <text>设备名称</text>
        <input @input="changeEuqipment_Name" type="text" name="设备名称" disabled="{{addType != 2}}" value="{{euqipment_Name}}" />
      </view>
      <view class='addItem' wx:if="{{addType == 2}}">
        <text>设备码</text>
        <input type="text" name="设备码" disabled value="{{euqipment_Code}}" />
        <image src="../images/icons/scan.png" @tap="ScanCode(2)"></image>
      </view>
    </view>
    <view class='BtBlock'>
      <view class='Bt Bt_cancel' @tap="CancelAdd">取消</view>
      <view class='Bt Bt_sure' @tap="SureAdd">添加</view>
    </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'

  @connect({
    homeList (state) {
      return state.counter.homeList
    },
    curHome (state) {
      return state.counter.curHome
    },
    curRoom (state) {
      return state.counter.curRoom
    },
    roomList (state) {
      return state.counter.roomList
    },
    urlPre (state) {
      return state.counter.urlPre
    }
  }, {
  })

  export default class AddModal extends wepy.component {
    props = {
      addType: {
        type: Number,
        default: 0   // 0-主控  1-从控  2-设备
      },
      MasterCode: {
        type: String
      },
      MasterId: {
        type: String
      },
      SecondControlType: {
        type: String
      },
      secondControlId: {
        type: String
      },
      ifShow: {
        twoWay: true
      }
    }

    data = {
      TypeList: [],
      masterControl_Name: '',
      masterControl_Code: '',
      secondControl_Name: '',
      secondControl_Code: '',
      euqipment_Type_index: 0,
      Equipment_Icon: 0,
      euqipment_Name: '',
      euqipment_Code: '',
      IconList: []
    }

    components = {
    }

    methods = {
      // 主控名称
      changeMasterControlName (e) {
        this.masterControl_Name = e.detail.value
        this.$apply()
      },
      // 从控名称
      changeSecondControlName (e) {
        this.secondControl_Name = e.detail.value
        this.$apply()
      },
      // 设备名称
      changeEuqipment_Name (e) {
        this.euqipment_Name = e.detail.value
        this.$apply()
      },
      // 选择设备类型
      bindPickerChangeType (e) {
        this.euqipment_Type_index = e.detail.value
        this.$apply()
      },
      // 选择图片
      bindChange (e) {
        this.Equipment_Icon = this.IconList[e.detail.value[0]].img
        this.$apply()
      },
      ScanCode (TYPE) {
        return new Promise((resolve, reject) => {
          wepy.scanCode({
            onlyFromCamera: false
          }).then((res) => {
            switch (TYPE) {
              case '0':
                console.log('0---------------')
                this.masterControl_Code = res.result
                this.$apply()
                break
              case '1':
                console.log('1---------------')
                this.secondControl_Code = res.result
                this.$apply()
                break
              case '2':
                console.log('2---------------')
                this.euqipment_Code = res.result
                this.$apply()
                break
            }
          }).catch((res) => {
            console.log(res)
          })
        })
      },
      CancelAdd () {
        this.$parent.ifAdd = false
        this.$parent.$apply()
      },
      SureAdd () {
        // dosomething
        this.$parent.ifAdd = false
        this.$parent.$apply()
        switch (this.addType) {
          case 0:
            console.log('0---------------')
            this.addMasterControl()
            break
          case 1:
            console.log('1---------------')
            this.addSecondControl()
            break
          case 2:
            console.log('2---------------')
            this.addEQ()
            // this.$emit('refreshEquipment-emit', 1, 2, 3)
            break
        }
      }
    }

    // self fun
    // 设备类别
    getEQType () {
      wepy.showLoading({
        title: '加载中'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/deviceType',
          method: 'GET'
        }).then((res) => {
          wepy.hideLoading()
          switch (res.data.code) {
            case 1:
              this.TypeList = res.data.deviceTypeList
              this.$apply()
              resolve(res)
              break
            default:
              this.$parent.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../images/icons/attention.png'
              })
          }
          resolve(res.data.openid)
        }).catch((res) => {
          wepy.hideLoading()
          console.log(res)
          this.$parent.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../images/icons/attention.png'
          })
        })
      })
    }
    addMasterControl () {
      if (this.masterControl_Name === '' || this.masterControl_Code === '') {
        this.$parent.$invoke('toast', 'show', {
          title: '请输入主控名称或主控码！',
          img: '../../images/icons/attention.png'
        })
        return false
      }
      wepy.showLoading({
        title: '加载中'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: encodeURI(this.urlPre + '/mainControl?home_id=' + this.curHome.home_id + '&main_control_name=' + this.masterControl_Name + '&main_control_code=' + this.masterControl_Code),
          method: 'POST'
        }).then((res) => {
          wepy.hideLoading()
          switch (res.data.code) {
            case 1:
              wepy.hideLoading()
              wepy.showToast({
                title: '添加成功!',
                icon: 'success'
              })
              this.$emit('refreshMasterControl-emit', 1, 2, 3)
              resolve(res)
              break
            case 0:
              wepy.hideLoading()
              this.$parent.$invoke('toast', 'show', {
                title: '该名称不可用！',
                img: '../../images/icons/attention.png'
              })
              break
            default:
              wepy.hideLoading()
              this.$parent.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../images/icons/attention.png'
              })
          }
          resolve(res.data.openid)
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$parent.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../images/icons/attention.png'
          })
        })
      })
    }

    addSecondControl () {
      if (this.secondControl_Name === '' || this.secondControl_Code === '') {
        this.$parent.$invoke('toast', 'show', {
          title: '请输入从控名称或从控码！',
          img: '../../images/icons/attention.png'
        })
        return false
      }
      wepy.showLoading({
        title: '加载中'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: encodeURI(this.urlPre + '/secondControl?home_id=' + this.curHome.home_id + '&second_control_name=' + this.secondControl_Name + '&main_control_code=' + this.MasterCode + '&second_contrl_code=' + this.secondControl_Code + '&second_control_category=' + this.SecondControlType + '&main_control_id=' + this.MasterId),
          method: 'POST'
        }).then((res) => {
          wepy.hideLoading()
          switch (res.data.code) {
            case 1:
              wepy.hideLoading()
              wepy.showToast({
                title: '添加成功!',
                icon: 'success'
              })
              this.$emit('refreshSecondControl-emit')
              resolve(res)
              break
            case 0:
              wepy.hideLoading()
              this.$parent.$invoke('toast', 'show', {
                title: '该名称不可用！',
                img: '../../images/icons/attention.png'
              })
              break
            default:
              wepy.hideLoading()
              this.$parent.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../images/icons/attention.png'
              })
          }
          resolve(res.data.openid)
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$parent.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../images/icons/attention.png'
          })
        })
      })
    }

    addEQ () {
      if (this.euqipment_Name === '' || this.euqipment_Code === '') {
        this.$parent.$invoke('toast', 'show', {
          title: '请输入设备名称或设备码！',
          img: '../../images/icons/attention.png'
        })
        return false
      }
      wepy.showLoading({
        title: '加载中'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/device',
          data: {
            register_id: this.curRoom.register_id,
            home_id: this.curHome.home_id,
            house_id: this.curRoom.id,
            main_control_code: this.MasterCode,
            main_control_id: this.MasterId,
            second_control_id: this.secondControlId,
            device_name: this.euqipment_Name,
            device_code: this.euqipment_Code,
            default_device_type: this.TypeList[this.euqipment_Type_index].device_type_code,
            device_img: this.Equipment_Icon,
            device_status: 0
          },
          method: 'POST'
        }).then((res) => {
          wepy.hideLoading()
          switch (res.data.code) {
            case 1:
              wepy.showToast({
                title: '添加成功!',
                icon: 'success'
              })
              this.$emit('refreshEquipment-emit')
              resolve(res)
              break
            case 0:
              this.$parent.$invoke('toast', 'show', {
                title: '该名称不可用！',
                img: '../../images/icons/attention.png'
              })
              break
            default:
              this.$parent.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../images/icons/attention.png'
              })
          }
          resolve(res)
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$parent.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../images/icons/attention.png'
          })
        })
      })
    }
    // 获取场景图标
    GetIconList () {
      wepy.showLoading({
        title: '加载中'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/selectmachineimg',
          method: 'POST',
          header: {
            'Content-Type': 'application/x-www-form-urlencoded'
          }
        }).then((res) => {
          wepy.hideLoading()
          switch (res.data.result) {
            case 1:
              this.IconList = res.data.scenariolist
              this.Equipment_Icon = res.data.scenariolist[0].img
              this.$apply()
              resolve(res)
              break
            case 0:
              this.$parent.$invoke('toast', 'show', {
                title: '获取图标失败！',
                img: '../../../images/icons/attention.png'
              })
              break
            default:
              this.$parent.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$parent.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../../images/icons/attention.png'
          })
        })
      })
    }

    onLoad () {
      this.getEQType()
      this.GetIconList()
    }
  }
</script>
