<style lang="less">
page{
  .controlPanel{
    width: 650rpx;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    .Light{
      width: 200rpx;
      height: 200rpx;
      font-size: 50rpx;
      font-weight: bold;
      color: #fff;
      border-radius: 50%;
      display: flex;
      justify-content: center;
      align-items: center;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%,-50%);
    }
  }
  .focus{
    background: #3498db;
    border: 0px solid #fff;
  }
  .blur{
      border: 2px solid #fff;
  }
}
</style>
<template>
  <view class='controlPanel'>
    <text class="Light {{isFocus?'focus': 'blur'}}" @tap="ToggleSwitch">OFF</text>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'

  @connect({
    urlPre (state) {
      return state.counter.urlPre
    },
    curHome (state) {
      return state.counter.curHome
    }
  }, {
  })

  export default class ModifyModal extends wepy.component {
    // props = {
    //   modifyType: {
    //     type: Number,
    //     default: 0   // 0-家名称 1-家地址 2-房间名称
    //   },
    //   modifyTit: {
    //     type: String
    //   },
    //   newModifyContent: {
    //     twoWay: true
    //   },
    //   houseId: {
    //     twoWay: true
    //   },
    //   ifShow: {
    //     twoWay: true
    //   }
    // }

    data = {
      isFocus: false

    }

    components = {
    }

    methods = {
      ToggleSwitch () {
        this.isFocus = true
        this.$apply()
        const innerAudioContext = wepy.createInnerAudioContext()
        innerAudioContext.autoplay = true
        innerAudioContext.src = 'https://jingshangs.com/upload/ON.mp3'
        innerAudioContext.onPlay(() => {
          console.log('播放')
        })
        innerAudioContext.onError((res) => {
          console.log(res)
        })
        wepy.showModal({
          title: '提示',
          content: '设备不在线！',
          showCancel: false,
          success: (res) => {
          }
        })
        setTimeout(() => {
          this.isFocus = false
          this.$apply()
        },300)
      }
    }

    // self fn
    modifyRoomName () {
      console.log('修改房间名称--------------------')
      return new Promise((resolve, reject) => {
        wepy.request({
          url: encodeURI(this.urlPre + '/house?id=' + this.houseId + '&house_name=' + this.$parent.newModifyContent + '&home_id=' + this.curHome.home_id),
          data: {
          },
          method: 'PUT',
          header: {
            'content-type': 'application/json' // 默认值
          }
        }).then((res) => {
          switch (res.data.code) {
            case 1:
              wepy.hideLoading()
              wepy.showToast({
                title: '修改成功!',
                icon: 'success'
              })
              this.$emit('refreshHouseInfo-emit')
              resolve(res)
              break
            default:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '修改失败！',
                img: '../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../images/icons/attention.png'
          })
        })
      })
    }
  }
</script>
