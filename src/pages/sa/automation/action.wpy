<style lang="less">
page{
  font-size: 30rpx;
  background: #efefef;
}
.ActionList{
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: space-bettween;
}
.Action_item{
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: space-bettween;
}
.Action_item_tit{
  width: e("calc(100% - 40rpx)");
  height: 80rpx;
  padding: 20rpx;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #fff;
}
.Toggle_close{
  width: 50rpx;
  height: 50rpx;
  display: block;
}
.Toggle_open{
  width: 50rpx;
  height: 50rpx;
  display: block;
  transform: rotate(180deg);
}

.EQList_list{
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  background: #fff;
}
.EQList_list_Item{
  width: 750rpx;
  height: 130rpx;
  display: flex;
  justify-content: space-between;
  align-items: center; 
  background: #fff;
  border-bottom: 1px solid #efefef;
}
.EQList_list_Item image{
  width: 80rpx;
  height: 80rpx;
  margin: 0 10rpx;
  border-radius: 50%;
  display: inline-block;
}
.EQList_list_text{
  width: e("calc(750rpx - 100rpx - 150rpx)");
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
}
.EQList_list_text_name{
  font-size: 32rpx;
  font-weight: bold;
}
.EQList_list_text_room{
  font-size: 30rpx;
  color: #ddd;
}
.EQList_list_Item .ControlBt{
  width: 50rpx;
  height: 50rpx;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  margin-right: 20rpx;
  border: 4rpx solid #3498db;
}
.EQList_list_Item .ControlBt image{
  width: 40rpx;
  height: 40rpx;
}
</style>
<template>
  <view class='ActionIndex'>
    <view class='ActionList'>
      <!--Scene  -->
      <view class='Action_item'>
        <view class='Action_item_tit' data-kind='Scene' bindtap='Toggle'>
          <text>全部场景</text>
          <image class="{{Toggle_Scene ?'Toggle_open':'Toggle_close'}}" src='../../../images/icons/arrow-down.png'></image>
        </view>
        <!--list  -->
        <view class='EQList_list' wx:if="{{Toggle_Scene}}">
          <view class='EQList_list_Item' wx:for-items="{{SceneList}}" wx:for-index="EQIdx" wx:for-item="Equipment" wx:key="EQIdx" bindtap='ChooseScene' data-idx='{{EQIdx}}'>
            <image src="{{Equipment.scenario_img}}"></image>
            <view class='EQList_list_text'>
              <text class='EQList_list_text_name'>{{Equipment.fname}}</text>
              <text class='EQList_list_text_room'></text>
            </view>
            <view class="ControlBt">
              <image wx:if="{{Equipment.choosed}}" src='../../../images/icons/foodChoosed.png'></image>
            </view> 
          </view>
        </view>
      </view>
      <!--EQ  -->
      <view class='Action_item'>
        <view class='Action_item_tit'  data-kind='EQ' bindtap='Toggle'>
          <text>全部设备</text>
          <image class="{{Toggle_EQ ?'Toggle_open':'Toggle_close'}}" src='../../../../images/icons/arrow-down.png'></image>
        </view>
        <!--list  -->
        <view class='EQList_list' wx:if="{{Toggle_EQ}}">
          <view class='EQList_list_Item' wx:for-items="{{EQList}}" wx:for-index="EQIdx" wx:for-item="Equipment" wx:key="EQIdx" bindtap='ChooseEQ' data-idx='{{EQIdx}}'>
            <image src="{{Equipment.machine_img}}"></image>
            <view class='EQList_list_text'>
              <text class='EQList_list_text_name'>{{Equipment.second_name}}</text>
              <text class='EQList_list_text_room'>{{Equipment.room_name}}</text>
            </view>
            <view class="ControlBt">
              <image wx:if="{{Equipment.choosed}}" src='../../../images/icons/foodChoosed.png'></image>
            </view> 
          </view>
        </view>
      </view>
    </view>
    <button class='FixedBottomBt MarginTB_40 HarfLongBt ColorWhite BgRed' bindtap='Submit'>确定</button>

  <toast/>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Toast from 'wepy-com-toast'
  import testMixin from '../../../mixins/test'
  import { changeAutomationInfo } from '../../../store/actions'

  @connect({
    homeList (state) {
      return state.counter.homeList
    },
    urlPre (state) {
      return state.counter.urlPre
    },
    RoomIconList (state) {
      return state.counter.RoomIconList
    },
    CurHomeRole (state) {
      return state.counter.CurHomeRole
    },
    curHome (state) {
      return state.counter.curHome
    },
    AutomationInfo (state) {
      return state.counter.AutomationInfo
    }
  }, {
    changeAutomationInfo
  })

  export default class SceneIndex extends wepy.page {
    config = {
      navigationBarTitleText: '场景'
    }
    watch = {
    }
    components = {
      toast: Toast
    }

    mixins = [testMixin]

    data = {
      SceneList: [],
      EQList: [],
      Toggle_Scene: false,
      Toggle_EQ: false
    }

    computed = {
    }

    methods = {
      // Toggles
      Toggle (e) {
        switch (e.currentTarget.dataset.kind) {
          case 'EQ':
            this.Toggle_EQ = !this.Toggle_EQ
            this.Toggle_Scene = false
            break
          case 'Scene':
            this.Toggle_Scene = !this.Toggle_Scene
            this.Toggle_EQ = false
            break
        }
      },
      // 选择切换--设备
      ChooseEQ (e) {
        let Temp = this.EQList
        Temp[e.currentTarget.dataset.idx].choosed = !this.EQList[e.currentTarget.dataset.idx].choosed
        this.EQList = Temp
      },
      // 选择切换--场景
      ChooseScene (e) {
        let Temp = this.SceneList
        Temp[e.currentTarget.dataset.idx].choosed = !this.SceneList[e.currentTarget.dataset.idx].choosed
        this.SceneList = Temp
      },
      // Submit
      Submit () {
        if (this.CurHomeRole === 3) {
          wepy.showModal({
            title: '提示',
            content: '权限不足！',
            showCancel: false
          })
          return false
        }
        let ActionList = [...this.AutomationInfo.ActionList]
        this.EQList.map((Item, Idx) => {
          if (Item.choosed) {
            Item.status = 0
            Item.when = 0
            Item.kind = 'equipment'
            ActionList.push(Item)
          }
        })
        this.SceneList.map((Item, Idx) => {
          if (Item.choosed) {
            Item.status = 0
            Item.when = 0
            Item.kind = 'scene'
            ActionList.push(Item)
          }
        })
        let NewActionInfo = {
          type: 'automation_update_ActionList',
          newInfo: ActionList
        }
        this.methods.changeAutomationInfo(NewActionInfo)
        wepy.navigateBack()
      }
    }

    // self FN

    // 获取当前家下除了传感器设备列表
    GetCurEQlist(ID) {
      wepy.showLoading({
        title: '加载中...'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/selecteqlist?homeid=' + ID,
          method: 'GET',
          header: {
            'Content-Type': 'application/x-www-form-urlencoded'
          }
        }).then((res) => {
          console.log(res.data.scenario)
          switch (res.data.code) {
            case 1:
              let Temp = res.data.deviceHomeList
              Temp.map((Item, Idx) => {
                Item.choosed = false
              })
              this.EQList = Temp
              this.$apply()
              wepy.hideLoading()
              resolve(res)
              break
            case 0:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../../images/icons/attention.png'
              })
              break
            default:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../../images/icons/attention.png'
          })
        })
      })
    }
    // 获取当前家下场景列表
    GetCurSceneList(ID) {
      wepy.showLoading({
        title: '加载中...'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/selectallscenario?id=' + ID,
          method: 'GET',
          header: {
            'Content-Type': 'application/x-www-form-urlencoded'
          }
        }).then((res) => {
          console.log(res.data.scenario)
          switch (res.data.code) {
            case 1:
              this.SceneList = res.data.scenariolist
              this.$apply()
              wepy.hideLoading()
              resolve(res)
              break
            case 0:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../../images/icons/attention.png'
              })
              break
            default:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../../images/icons/attention.png'
          })
        })
      })
    }

    onLoad(options) {
      this.GetCurEQlist(this.curHome.home_id)
      this.GetCurSceneList(this.curHome.home_id)
    }
    onShow() {
    }
  }
</script>
