<style lang="less">
page{
  font-size: 30rpx;
  background: #efefef;
}
.TopSubmitBt{
  width: 100%;
  height: 100rpx;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  background: #fff;
  position: fixed;
  top: 0;
  left: 0;
  box-shadow: 0px 5px 5px #888888;
}
.Condition_tit{
  width: e("calc(100% - 40rpx)");
  height: 80rpx;
  padding: 20rpx;
}
.Condition_list{
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  background: #fff;
}
.Condition_list_Sensor{
  margin-bottom: 100px;
}
.Condition_Item{
  width: 750rpx;
  height: 130rpx;
  display: flex;
  justify-content: space-between;
  align-items: center; 
  background: #fff;
  border-bottom: 1px solid #efefef;
}
.Condition_Item image{
  width: 80rpx;
  height: 80rpx;
  margin: 0 10rpx;
  border-radius: 50%;
  display: inline-block;
}
.Condition_list_item_text{
  width: e("calc(750rpx - 100rpx - 150rpx)");
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
}
.Condition_list_item_text_name{
  font-size: 32rpx;
  font-weight: bold;
}
.Condition_list_item_text_room{
  font-size: 30rpx;
  color: #ddd;
}
.Condition_Item .ControlBt{
  width: 50rpx;
  height: 50rpx;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  margin-right: 20rpx;
  border: 4rpx solid #3498db;
}
.Condition_Item .ControlBt image{
  width: 40rpx;
  height: 40rpx;
}
</style>
<template>
  <view class='ConditionIndex'>
    <view class='TopSubmitBt'>
      <view class='TopFixedSubmitBt' bindtap='Submit'>确定</view>
    </view>
    <view class='Condition_tit'>
      <text>系统条件</text>
    </view>
    <view class='Condition_list'>
      <view class='Condition_Item' bindtap='ChooseTimeBlock'>
        <image src='../../../../images/icons/scene_timing.png'></image>
        <view class='Condition_list_item_text'>
          <text class='Condition_list_item_text_name'>时间</text>
          <text class='Condition_list_item_text_room'></text>
        </view>
        <view class="ControlBt">
          <image wx:if="{{IfchooseTime}}" src='../../../images/icons/foodChoosed.png'></image>
        </view> 
      </view>
    </view>
    <view class='Condition_tit'>
      <text>传感器</text>
    </view>
    <view class='Condition_list Condition_list_Sensor'>
      <view class='Condition_Item' wx:for-items="{{SensorList}}" wx:for-index="SensorIdx" wx:for-item="Sensor" wx:key="SensorIdx" bindtap='Choose' data-idx='{{SensorIdx}}'>
        <image src="{{Sensor.kind_img}}"></image>
        <view class='Condition_list_item_text'>
          <text class='Condition_list_item_text_name'>{{Sensor.second_control_name}}</text>
          <text class='Condition_list_item_text_room'></text>
        </view>
        <view class="ControlBt">
          <image wx:if="{{Sensor.choosed}}" src='../../../images/icons/foodChoosed.png'></image>
        </view> 
      </view>
    </view>

  <toast/>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Toast from 'wepy-com-toast'
  import testMixin from '../../../mixins/test'
  import { changeAutomationInfo } from '../../../store/actions'

  @connect({
    homeList (state) {
      return state.counter.homeList
    },
    urlPre (state) {
      return state.counter.urlPre
    },
    RoomIconList (state) {
      return state.counter.RoomIconList
    },
    CurHomeRole (state) {
      return state.counter.CurHomeRole
    },
    curHome (state) {
      return state.counter.curHome
    },
    AutomationInfo (state) {
      return state.counter.AutomationInfo
    }
  }, {
    changeAutomationInfo
  })

  export default class SceneIndex extends wepy.page {
    config = {
      navigationBarTitleText: '场景'
    }
    watch = {
    }
    components = {
      toast: Toast
    }

    mixins = [testMixin]

    data = {
      IfchooseTime: false,
      SensorList: []
    }

    computed = {
    }

    methods = {
      // 时间切换
      ChooseTimeBlock (e) {
        this.IfchooseTime = !this.IfchooseTime
        this.$apply()
      },
      // 选择切换
      Choose (e) {
        let Temp = this.SensorList
        Temp[e.currentTarget.dataset.idx].choosed = !this.SensorList[e.currentTarget.dataset.idx].choosed
        this.SensorList = Temp
        this.$apply()
      },
      // Submit
      Submit () {
        if (this.CurHomeRole === 3) {
          wepy.showModal({
            title: '提示',
            content: '权限不足！',
            showCancel: false
          })
          return false
        }
        let ChoosedList = [...this.AutomationInfo.ConditionList]
        this.SensorList.map((Item, Idx) => {
          if (Item.choosed) {
            Item.status = 0
            Item.when = 0
            ChoosedList.push(Item)
          }
        })
        if (this.IfchooseTime) {
          let obj = {
            'kind_img': '../../../../images/icon/scene_timing.png', 'kind_name': '时间', 'room': '', 'when': 0, 'status': 0, 'kind_code': 'time', 'time_start': '00:00', 'time_end': '23:59' }
          ChoosedList.push(obj)
        }
        // 去重  kind_name? id?
        let tempObj = {}
        ChoosedList = ChoosedList.reduce((item, next) => {
          tempObj[next.kind_name] ? '' : tempObj[next.kind_name] = true && item.push(next)
          return item
        }, [])

        let NewConditionInfo = {
          type: 'automation_update_ConditionList',
          newInfo: ChoosedList
        }
        this.methods.changeAutomationInfo(NewConditionInfo)
        wepy.navigateBack()
      }
    }

    // self FN

    // 获取传感器
    GetCurSensor(ID) {
      wepy.showLoading({
        title: '加载中...'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/selectmastercontrol?home_id=' + ID,
          method: 'GET',
          header: {
            'Content-Type': 'application/x-www-form-urlencoded'
          }
        }).then((res) => {
          console.log(res.data.scenario)
          switch (res.data.code) {
            case 1:
              let Temp = res.data.secondControlList
              Temp.map((Item, Idx) => {
                Item.choosed = false
              })
              this.SensorList = Temp
              this.$apply()
              wepy.hideLoading()
              resolve(res)
              break
            case 0:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../../images/icons/attention.png'
              })
              break
            default:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../../images/icons/attention.png'
          })
        })
      })
    }

    onLoad(options) {
      this.GetCurSensor(this.curHome.home_id)
    }
    onShow() {
    }
  }
</script>
