<style lang="less">
page{
  font-size: 30rpx;
  .SAIndex{
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    .tabBar{
      width: 100%;
      height: 100rpx;
      display: flex;
      align-items: center;
      justify-content: space-between;
      .tabItem{
        height: 100%;
        text-align:center;
      }
      .tabActive{
        width: 60%;
        height: 100%;
        line-height:100rpx;
        font-size: 36rpx;
        color: #fff;
        font-weight: bold;
        background: #3498db;
      }
      .tabNormal{
        height: 80rpx;
        line-height:80rpx;
        width: 40%;
        color: #fff;
        background: #3498db;
      }
    }
    .SAList{
      width: 100%;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: center;
      margin-top:0rpx;
      background: #fff;
      .listItem{
        width: e("calc(100% - 40rpx)");
        height:100rpx;
        display: flex;
        justify-content: flex-start;
        align-items: center;
        background: #fff;
        border-bottom: 1px solid #efefef;
        image{
          width: 50rpx;
          height:50rpx;
        }
        &_name{
          width:e("calc(100% - 50rpx - 100rpx - 20rpx)");
          padding:0 10rpx;
        }
        .active{
          color: #3498db;
        }
        &_status{
          width:100rpx;
        }
      }
      .empty{
        width: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        margin-top: 80rpx;
        text{
          color: #bfbfbf;
        }
        image{
          width: 150rpx;
          height: 150rpx;
        }
      }
    }
    .addBt{
      width: 250rpx;
      height: 70rpx;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 30rpx;
      margin-top:40rpx;
      background: #F8F8F8;
      border-radius: 15rpx;
      border: 1px solid #3498db;
      image{
        width: 50rpx;
        height: 50rpx;
        margin-right: 10rpx;
      }
    }
  }
}
</style>
<template>
  <view class='SAIndex'>
    <view class='tabBar'>
      <view class="tabItem {{cur_index == 0?'tabActive':'tabNormal'}}" @tap="toggleTab(0)"><text>场景</text></view>
      <view class="tabItem {{cur_index == 1?'tabActive':'tabNormal'}}" @tap="toggleTab(1)"><text>自动化</text></view>
    </view>
    <!-- SAList -->
    <view class='SAList'>
      <!-- scene -->
      <Empty :tipTitle.sync="tipTitle_scene" wx:if="{{sceneList.length == 0 && cur_index == 0}}"></Empty>
      <view class='listItem scene' wx:if="{{sceneList.length > 0}}" wx:for-items="{{sceneList}}" wx:for-item="scene" wx:key="sceneIdx" wx:for-index="sceneIdx" wx:if="{{sceneList.length > 0 && cur_index == 0}}">
        <image src="{{scene.scenario_img}}" @tap="toEdit_scene" data-sceneid='{{scene.id}}'></image>
        <text class='listItem_name' @tap="toEdit_scene" data-sceneid='{{scene.id}}'>{{scene.fname}}</text>
        <text class="{{scene.on_off_status==0?'listItem_status':'listItem_status active'}}">{{scene.on_off_status==0?'offline':'online'}}</text>
      </view>
      <!-- automation -->
      <Empty :tipTitle.sync="tipTitle_automation" wx:if="{{automationList.length == 0 && cur_index == 1}}"></Empty>
      <view class='listItem equipment' wx:if="{{automationList.length > 0}}" wx:for-items="{{automationList}}" wx:for-item="automation" wx:key="automationIdx" wx:for-index="automationIdx" wx:if="{{automationList.length > 0 && cur_index == 1}}" >
        <!-- <image src="../../images/icons/box-empty.png" @tap="toEdit_automation" data-automaticid='{{automation.id}}'></image> -->
        <text class='listItem_name' @tap="toEdit_automation" data-automaticid='{{automation.id}}'>{{automation.fname}}</text>
        <text class="{{automation.on_off_status==0?'listItem_status':'listItem_status active'}}">{{automation.on_off_status==0?'offline':'online'}}</text>
      </view>
    </view>
    <!-- <button wx:if="{{curHome.isCreater}}" class='addBt' @tap="addSA">添加</button> -->
    <view wx:if="{{curHome.isCreater}}" class='addBt' @tap="addSA">
      <image src='../../images/icons/automatic.png'></image>
      <text>添加</text>
    </view>
  <toast/>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Toast from 'wepy-com-toast'
  import testMixin from '../../mixins/test'
  import Empty from '../../components/empty'
  import { changeSceneInfo, changeAutomationInfo } from '../../store/actions'

  @connect({
    homeList (state) {
      return state.counter.homeList
    },
    curHome (state) {
      return state.counter.curHome
    },
    urlPre (state) {
      return state.counter.urlPre
    }
  }, {
    changeSceneInfo,
    changeAutomationInfo
  })

  export default class SAIndex extends wepy.page {
    config = {
      navigationBarTitleText: '添加智能'
    }
    components = {
      toast: Toast,
      Empty: Empty
    }

    mixins = [testMixin]

    data = {
      cur_index: '0',
      tipTitle_automation: '暂无场景，请添加',
      tipTitle_scene: '暂无自动化，请添加',
      automationList: [],
      sceneList: [],
      initSceneInfo: {
        Scene_name: '',
        Scene_Room_Icon: '', // 场景图片
        Scene_timing: {
          time_start: '',
          time_end: '',
          time_control: ''
        },
        Scene_EQList: [],
        Scene_AutomaticList: [],
        SceneEQCount: 0,  // 加入设备个数
        SceneAutomaticCount: 0 // 加入联动个数
      },
      initAutomationInfo: {
        AutomaticName: '',
        ConditionList: [],
        ActionList: []
      }
    }

    computed = {
    }

    methods = {
      toggleTab (IDX) {
        console.log(IDX)
        this.cur_index = IDX
        this.$apply()
        if (IDX === 0) {
          this.GetSceneIconList()
        } else {
          this.GetCurAutomaticList()
        }
      },
      // 新增
      addSA () {
        if (this.cur_index === '0') {
          // 清空之前的场景信息
          let NewSceneInfo = {
            type: 'init',
            newInfo: this.initSceneInfo
          }
          // 信息返回更新
          this.methods.changeSceneInfo(NewSceneInfo)
          this.$navigate('./scene/index?type=0')
        } else {
          // 清空之前的自动化信息
          let NewAutomationInfo = {
            type: 'init',
            newInfo: this.initAutomationInfo
          }
          // 信息返回更新
          this.methods.changeAutomationInfo(NewAutomationInfo)
          this.$navigate('./automation/index?type=0')
        }
      },
      // 编辑场景
      toEdit_scene (e) {
        this.$navigate('./scene/index?sceneid=' + e.currentTarget.dataset.sceneid + '&type=1')
      },
      // 编辑自动化
      toEdit_automation (e) {
        this.$navigate('./automation/index?automaticid=' + e.currentTarget.dataset.automaticid + '&type=1')
      }
    }

    // 获取当前家下所有场景
    GetSceneIconList () {
      wepy.showLoading({
        title: '加载中'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/selectallscenario?id=' + this.curHome.home_id,
          method: 'GET',
          header: {
            'Content-Type': 'application/x-www-form-urlencoded'
          }
        }).then((res) => {
          wepy.hideLoading()
          switch (res.data.result) {
            case 1:
              this.sceneList = res.data.scenariolist
              this.$apply()
              resolve(res)
              break
            case 0:
              this.$invoke('toast', 'show', {
                title: '获取图标失败！',
                img: '../../../images/icons/attention.png'
              })
              break
            default:
              this.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../../images/icons/attention.png'
          })
        })
      })
    }
    // GetCurAutomaticList
    GetCurAutomaticList () {
      wepy.showLoading({
        title: '加载中'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/selectallautomation?id=' + this.curHome.home_id,
          method: 'GET',
          header: {
            'Content-Type': 'application/x-www-form-urlencoded'
          }
        }).then((res) => {
          wepy.hideLoading()
          switch (res.data.result) {
            case 1:
              this.automationList = res.data.automationlist
              this.$apply()
              resolve(res)
              break
            case 0:
              this.$invoke('toast', 'show', {
                title: '获取图标失败！',
                img: '../../../images/icons/attention.png'
              })
              break
            default:
              this.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../../images/icons/attention.png'
          })
        })
      })
    }

    events = {
    }

    onShow() {
      this.GetSceneIconList()
      this.GetCurAutomaticList()
    }
  }
</script>
