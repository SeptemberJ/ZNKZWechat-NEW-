<style lang="less">
page{
  background-image: linear-gradient(to right, #e4afcb 0%, #b8cbb8 0%, #b8cbb8 0%, #e2c58b 30%, #c2ce9c 64%, #7edbdc 100%);
  .controlWrap{
    width: 600rpx;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
  }
  .TabBox{
    width: 600rpx;
    height: 50rpx;
    margin: 40rpx auto 20rpx auto;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    border: 1px solid #3498db;
    border-top-left-radius: 20rpx;
    border-bottom-left-radius: 20rpx;
    border-top-right-radius: 20rpx;
    border-bottom-right-radius: 20rpx;
    overflow: hidden;
  }
  .TabItem{
    width: 200rpx;
    text-align: center;
    padding: 0 10px;
    height: 100%;
    line-height: 50rpx;
    font-size: 30rpx;
  }
  .Active{
    background: #3498db;
    color: #fff;
  }
  ec-canvas {
    width: 100%;
    height: 750rpx;
  }
  .ArrowDown{
      width: 100%;
      height: 100rpx;
      display: flex;
      justify-content: center;
      align-items: center;
      position: fixed;
      left: 0;
      bottom: 0;
      image{
        width: 80rpx;
        height: 80rpx;
        transform: rotate(180deg);
        display: block;
      }
    }
    .ArrowUp{
      width: 100%;
      height: 100rpx;
      display: flex;
      justify-content: center;
      align-items: center;
      position: fixed;
      left: 0;
      bottom: 0;
      image{
        width: 80rpx;
        height: 80rpx;
        display: block;
      }
    }
}
</style>
<template>
    <view class='controlWrap'>
      <!-- <button @tap="changeChart(0)">切换1</button>
      <button @tap="changeChart(1)">切换2</button>
      <button @tap="dispose">释放图表</button> -->

      <!-- 单独开关 -->
      <controlPanelLight wx:if="{{ifShowChart && eqType != 'air'}}"></controlPanelLight>
      <!-- 空调 -->
      <controlPanelAirCondition  wx:if="{{ifShowChart && eqType == 'air'}}"></controlPanelAirCondition>

      <view class='TabBox' wx:if="{{!ifShowChart}}">
        <view class="{{CurTab == TabIdx?'TabItem Active':'TabItem'}}" @tap='changeTab({{TabIdx}})' wx:for-items="{{TabMenu}}" wx:for-index="TabIdx" wx:for-item="Tab" wx:key="TabIdx">{{Tab}}</view>
      </view>
      <view style="width:100%;height:700rpx;">
        <view style="width:100%;height:700rpx;" hidden="{{ifShowChart}}">
          <ec-canvas id="mychart-dom-bar" canvas-id="mychart-bar" ec="{{ ec }}"></ec-canvas>
        </view>
      </view>
      <!--ArrowDown  -->
      <view wx:if="{{ifShowChart}}" class='ArrowDown'>
        <image @tap='showChart' src='../../images/icons/double-arrow-down.png'></image>
      </view>
        <!--ArrowUp  -->
      <view wx:if="{{!ifShowChart}}" class='ArrowUp'>
        <image @tap='hideChart'  src='../../images/icons/double-arrow-down.png'></image>
      </view>
    </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Toast from 'wepy-com-toast'
  import testMixin from '../../mixins/test'
  import * as echarts from '../../ec-canvasyl/echarts'
  import controlPanelLight from '../../components/controlPanel/controlPanel_light'
  import controlPanelAirCondition from '../../components/controlPanel/controlPanel_airCondition'

  var Chart = null
  var ecComponent = null

  function setOption (chart, IDX) {
    var DataInfo = {
      '0': [['0', 0], ['6', 2], ['12', 8], ['18', 12]],
      '1': [['一', 0], ['二', 2], ['三', 8], ['四', 12], ['五', 12], ['六', 30], ['日', 33]],
      '2': [['4', '0'], ['11', '2'], ['18', '8'], ['25', '12']],
      '3': [['1', '32'], ['2', '2'], ['3', '8'], ['4', '12'], ['5', '12'], ['6', '30'], ['7', '120'], ['8', '145'], ['9', '12'], ['10', '12'], ['11', '55'], ['12', '60']]
    }
    var option = {
      title: {
        text: '', // 耗电量统计 (单位：kw·h)
        left: 'center',
        textStyle: {
          color: '#000',
          fontStyle: 'normal',
          fontWeight: 'bold',
          fontFamily: 'sans-serif',
          fontSize: 12
        }
      },
      grid: {
        left: '10%'
      },
      tooltip: {
        trigger: 'axis'
      },
      xAxis: {
        // show : false,
        axisLabel: {
          formatter: function () {
            return ''
          }
        },
        splitLine: {
          show: true
        },
        data: DataInfo[IDX].map(function (item) {
          return item[0]
        })
      },
      yAxis: {
        splitLine: {
          show: true
        }
      },
      visualMap: {
        show: false,
        top: 10,
        right: 10,
        pieces: [{
          gt: 0,
          lte: 50,
          color: '#096'
        }, {
          gt: 50,
          lte: 100,
          color: '#ffde33'
        }, {
          gt: 100,
          lte: 150,
          color: '#ff9933'
        }, {
          gt: 150,
          lte: 200,
          color: '#cc0033'
        }, {
          gt: 200,
          lte: 300,
          color: '#660099'
        }, {
          gt: 300,
          color: '#7e0023'
        }],
        outOfRange: {
          color: '#999'
        }
      },
      series: {
        name: '',
        type: 'line',
        data: DataInfo[IDX].map(function (item) {
          return item[1]
        }),
        markLine: {
          silent: true,
          data: []
        }
      }
    }
    chart.setOption(option)
  }

  @connect({
    urlPre (state) {
      return state.counter.urlPre
    },
    homeList (state) {
      return state.counter.homeList
    },
    userInfo (state) {
      return state.counter.userInfo
    }
  }, {
  })

  export default class My extends wepy.page {
    config = {
      navigationBarTitleText: '控制面板',
      usingComponents: {
        'ec-canvas': '../../ec-canvasyl/ec-canvas'
      }
    }
    components = {
      toast: Toast,
      controlPanelLight: controlPanelLight,
      controlPanelAirCondition: controlPanelAirCondition
    }

    mixins = [testMixin]

    data = {
      // canvasId: 'mychart-pie',
      ec: {
        onInit: this.init
        // lazyLoad: true
      },
      eqType: null,
      ifShowChart: true,
      datas: [[820, 932, 901, 934, 1290, 1330, 1320], [120, 1132, 91, 934, 290, 1330, 320]],
      // ecComponent: null,
      // chart: null,
      isLoaded: false,
      CurTab: 0,
      TabMenu: ['日', '周', '月', '年']
    }

    computed = {
    }

    methods = {
      changeTab (IDX) {
        console.log('click')
        this.CurTab = IDX
        this.$apply()
        this.tabChange(IDX)
      },
      changeChart (IDX) {
        console.log('click')
        this.CurTab = IDX
        this.$apply()
        this.tabChange(IDX)
      },
      dispose () {
        console.log('dispose')
        this.ifShowChart = true
        this.$apply()
      },
      showChart () {
        this.ifShowChart = false
        this.$apply()
        this.tabChange(this.CurTab)
      },
      hideChart () {
        this.ifShowChart = true
        this.$apply()
      }
    }

    // self fn
    init (IDX) {
      ecComponent.init((canvas) => {
        // 获取组件的 canvas、width、height 后的回调函数
        // 在这里初始化图表
        const chart = echarts.init(canvas, '320', {
          width: '320',
          height: '324'
          // width: width ? width : app.globalData.width,
          // height: height ? height : app.globalData.width,
        })
        setOption(chart, IDX || 0)
        // 将图表实例绑定到 this 上，可以在其他成员函数（如 dispose）中访问
        Chart = chart
        // this.chart = chart
        this.ifShowChart = false
        this.$apply()
        return chart
      })
    }
    tabChange (IDX) {
      this.init(IDX)
    }

    events = {
    }

    onLoad(options) {
      this.eqType = options.eqType
      this.$apply()

    }
    onReady() {
      // 获取组件
      ecComponent = this.$wxpage.selectComponent('#mychart-dom-bar')
      this.$apply()
      console.log(this.$wxpage.selectComponent('#mychart-dom-bar'))
    }
  }
</script>
