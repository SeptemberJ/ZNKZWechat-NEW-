<style lang="less">
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .userinfo-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
  }

  .userinfo-nickname {
    color: #aaa;
  }

  button{
    width: 50%;
    margin-top:10px;
  }
</style>
<template>
  <view class="container">
    <button @tap="toast" size="mini">toast</button>
    <button @tap="showActionSheet" size="mini">showActionSheet</button>
    <button @tap="chooseLocation" size="mini">chooseLocation</button>
    <button @tap="getLocation" size="mini">getLocation</button>
    <button @tap="showModal" size="mini">showModal</button>
    <button @tap="showNavigationBarLoading" size="mini">showNavigationBarLoading</button>

     <toast />
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import moduleA from 'module-a' // aliasFields ignore module example
  import Toast from 'wepy-com-toast'
  import testMixin from '../mixins/test'

  console.log('moduleA ignored: ', moduleA) // => moduleA ignored: {}

  @connect({
    num (state) {
      return state.counter.num
    },
    asyncNum (state) {
      return state.counter.asyncNum
    },
    sumNum (state) {
      return state.counter.num + state.counter.asyncNum
    }
  })

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: 'components'
    }
    components = {
      toast: Toast
    }

    mixins = [testMixin]

    data = {
    }

    computed = {
    }

    methods = {
      toast () {
        console.log('hahah')
        let promise = this.$invoke('toast', 'show', {
          title: '自定义标题',
          img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
        })
        promise.then((d) => {
          console.log('toast done')
        })
      },
      showActionSheet () {
        return new Promise((resolve, reject) => {
          wepy.showActionSheet({
            itemList: ['A', 'B', 'C']
          }).then((res) => {
            console.log(res.tapIndex)
            resolve(res.tapIndex)
          }).catch((res) => {
            console.log(res)
          })
        })
      },
      chooseLocation () {
        return new Promise((resolve, reject) => {
          wepy.chooseLocation({
          }).then((res) => {
            console.log(res)
            resolve(res)
          }).catch((res) => {
            console.log(res)
          })
        })
      },
      getLocation () {
        return new Promise((resolve, reject) => {
          wepy.getLocation({
            type: 'gcj02'
          }).then((res) => {
            console.log(res)
            resolve(res)
          }).catch((res) => {
            console.log(res)
          })
        })
      },
      showModal () {
        return new Promise((resolve, reject) => {
          wepy.showModal({
            title: '提示',
            content: '这是一个模态弹窗'
          }).then((res) => {
            if (res.confirm) {
              console.log('用户点击确定')
            } else if (res.cancel) {
              console.log('用户点击取消')
            }
            resolve(res)
          }).catch((res) => {
            console.log(res)
          })
        })
      },
      showNavigationBarLoading () {
        wepy.showNavigationBarLoading()
      }
    }

    events = {
    }

    onLoad() {
    }
  }
</script>
