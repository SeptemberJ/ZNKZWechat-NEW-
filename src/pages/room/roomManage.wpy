<style lang="less">
page{
  background: #efefef;
  font-size: 30rpx;
  .roomManage{
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    .addBar{
      width: 100%;
      height: 100rpx;
      background: #fff;
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: fixed;
      top: 0;
      left: 0;
      box-shadow: 0px 5px 5px #888888;
      image{
        width: 80rpx;
        height: 80rpx;
        margin-left: 20rpx;
      }
    }
    .roomList{
      width: 100%;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      justify-content: flex-start;
      margin-top: 100rpx;
      .itemBar{
        width: e("calc(100% - 40rpx)");
        height:100rpx;
        padding: 0 20rpx;
        display: flex;
        align-items: center;
        justify-content: flex-start;
        background: #fff;
        text{
          display: flex;
          flex-grow: 1;
          font-weight: bold;
          color: #333;
        }
        image{
          width: 50rpx !important;
          height: 50rpx !important;
        }
      }
    }
  }
}
</style>
<template>
  <view class='roomManage'>
    <view class="addBar">
      <image src='../../images/icons/house.png'></image>
      <view class='TopSubmitBt'>
        <view class='TopFixedSubmitBt' @tap='toRoom'>添加</view>
      </view>
    </view>
    <view class="roomList">
      <view class='itemBar' wx:for-items="{{roomList}}" wx:for-item="roomItem" wx:key="roomIdx" wx:for-index="roomIdx">
        <text>{{roomItem.house_name}}</text>
        <image @tap="editRoom({{roomItem.id}}, {{roomItem.house_name}})" src="../../images/icons/edit.png"></image>
        <image @tap="deleteRoom({{roomItem.id}}, {{roomItem.register_id}})" src="../../images/icons/delete.png"></image>
      </view>
    </view>
    <ModifyModal :ifShow.sync="ifModify" wx:if="{{ifModify}}" :houseId.sync="houseId"></ModifyModal>
    <!-- <ModifyModal :modifyType.sync="modifyType" :ifShow.sync="ifModify" :newModifyContent.sync="newModifyContent"  wx:if="{{ifModify}}" :modifyTit.sync="modifyTit" :houseId.sync="houseId"></ModifyModal> -->
  <toast/>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Toast from 'wepy-com-toast'
  import testMixin from '../../mixins/test'
  import ModifyModal from '../../components/Modify'
  import { updateCurRoomList, updateCurRoom } from '../../store/actions'

  @connect({
    homeList (state) {
      return state.counter.homeList
    },
    curHome (state) {
      return state.counter.curHome
    },
    roomList (state) {
      return state.counter.roomList
    },
    urlPre (state) {
      return state.counter.urlPre
    }
  }, {
    updateCurRoomList,
    updateCurRoom
  })

  export default class My extends wepy.page {
    config = {
      navigationBarTitleText: '房间管理'
    }
    components = {
      toast: Toast,
      ModifyModal: ModifyModal
    }

    mixins = [testMixin]

    data = {
      modifyTit: '房间名称',
      modifyType: 2,
      ifModify: false,
      newModifyContent: '',
      houseId: null
    }

    computed = {
    }

    methods = {
      toRoom () {
        wepy.navigateTo({
          url: '../addRoom?type=1'
        })
      },
      deleteRoom (RoomID, RegisterId) {
        return new Promise((resolve, reject) => {
          wepy.showModal({
            title: '提示',
            content: '确定删除改房间?'
          }).then((res) => {
            if (res.confirm) {
              console.log('用户点击确定')
              this.sureDelete(RoomID, RegisterId)
            } else if (res.cancel) {
              console.log('用户点击取消')
            }
            resolve(res)
          }).catch((res) => {
            console.log(res)
          })
        })
      },
      editRoom (RoomID, RoomName) {
        this.$broadcast('modifyRoomInfo-broadcast', 2, '房间名称', RoomName)
        this.houseId = RoomID
        this.ifModify = true
        this.$apply()
      }
    }

    // self fn
    sureDelete(RoomID, RegisterId) {
      wepy.showLoading({
        title: '加载中'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/house?house_id=' + RoomID + '&register_id=' + RegisterId,
          method: 'DELETE'
        }).then((res) => {
          switch (res.data.code) {
            case 1:
              wepy.showToast({
                title: '删除成功!',
                icon: 'success'
              })
              setTimeout(() => {
                this.getRoomList()
              }, 1000)
              wepy.hideLoading()
              resolve(res)
              break
            case 0:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '删除失败！',
                img: '../../images/icons/attention.png'
              })
              break
            default:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../images/icons/attention.png'
          })
        })
      })
    }
    // 当前家下房间列表
    getRoomList () {
      wepy.showLoading({
        title: '加载中'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/house?home_id=' + this.curHome.home_id,
          method: 'GET'
        }).then((res) => {
          this.methods.updateCurRoomList(res.data.houseList)
          this.methods.updateCurRoom(res.data.houseList[0])
          // this.getRoomEQ(res.data.houseList[0].id)
          wepy.hideLoading()
          resolve(res)
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../images/icons/attention.png'
          })
        })
      })
    }

    events = {
      'refreshHouseInfo-emit': (...args) => {
        console.log('refreshHouseInfo-emit---------------------')
        this.getRoomList()
      }
    }

    onShow() {
      this.getRoomList()
    }
  }
</script>
