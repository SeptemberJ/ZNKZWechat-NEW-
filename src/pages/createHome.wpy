<style lang="less">
page{
  background: #efefef;
  padding-top: 20px;
  padding-bottom: 20px;
  font-size: 30rpx;
  .createHome{
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: space-between;
    justify-content: flex-start;
    &_item{
      width: e("calc(100% - 40rpx)");
      height: 100rpx;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 20rpx;
      background:#fff;
      text:nth-of-type(1){
        width: 200rpx;
      }
      .longText{
         display: flex;
         flex-grow: 1;
         height: 100rpx;
         line-height: 100rpx;
         color: #777;
      }
      input{
        height: 100%;
      }
      image{
        width: 50rpx;
        height: 50rpx;
      }
    }
    .border_top{
      border-top: 1px solid #efefef;
    }
    &_columnTit{
      width: e("calc(100% - 40rpx)");
      height: 100rpx;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 20rpx;
      color: #666;
      .columnItem{
        display: flex;
        align-items: center;
      }
      image{
        width: 50rpx;
        height: 50rpx;
      }
    }
    &_bt{
      width: 60%;
      text-align: center;
      line-height: 100rpx;
      background: #d81e06;
      font-size: 32rpx;
      color: #fff;
      margin: 20px auto auto auto;
      border-radius: 15rpx;
    }
  }
}

</style>
<template>
  <view class='createHome'>
    <view class='createHome_item'>
      <text>家庭名称</text>
      <input @input="changeHomeName" type="text" name="homeName" placeholder="填写家庭名称" value="{{homeName}}" style="width: calc(100% - 200rpx)"/>
    </view>
    <view class='createHome_item border_top'>
      <text>家庭位置</text>
      <input class='longText' @input="changeHomeAddress" value="{{homeAddress}}" placeholder="填写家地址"/ >
      <image wx-if="{{authored}}" src='../images/icons/address.png' @tap="chooseAddress"></image>
      <button wx-if="{{!authored}}" open-type="openSetting" bindopensetting="chooseAddress" style="background:#fff;border: 0px;">
        <image src='../images/icons/address.png'></image>
      </button>
    </view>

    <view class='createHome_columnTit'>
      <view class='columnItem'><text>在哪些房间有智能设备：</text></view>
      <view class='columnItem' @tap="addRoom"><image src='../images/icons/add.png'></image><text style='color:#3498db;'>添加其他房间</text></view>
    </view>

    <view class='createHome_item' wx:for-items="{{addRoomList}}" wx:for-index="RoomIndex" wx:for-item="RoomItem" wx:key="RoomIndex">
      <text>{{RoomItem.house_name}}</text>
      <image @tap="changeChoosed" data-idx="{{RoomIndex}}" src="{{RoomItem.choosed?'../images/icons/check.png':'../images/icons/square.png'}}"></image>
    </view>

    <view class='createHome_item' style="background:#efefef;color:#666;">
      房间信息可以后期进行修改
    </view>

    <view class='createHome_bt' @tap="createHome">确认创建</view>

    <toast/>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Toast from 'wepy-com-toast'
  import testMixin from '../mixins/test'
  import { changeAddRoomList, updateHomeList, updateCurHome, wxUserInfo } from '../store/actions'

  @connect({
    addRoomList (state) {
      return state.counter.addRoomList
    },
    urlPre (state) {
      return state.counter.urlPre
    }
  }, {
    changeAddRoomList,
    updateHomeList,
    updateCurHome,
    wxUserInfo
  })

  export default class CreateHome extends wepy.page {
    config = {
      navigationBarTitleText: '添加家庭'
    }

    components = {
      toast: Toast
    }

    mixins = [testMixin]

    data = {
      authored: false,
      createFrom: 1,
      homeName: '',
      homeAddress: null
    }

    computed = {
    }

    watch = {
      addRoomList (curVal, oldVal) {
        console.log('oldVal--------------')
        console.log(oldVal)
        console.log('curVal-----------')
        console.log(curVal)
      }
    }

    methods = {
      changeHomeName (e) {
        this.homeName = e.detail.value
        this.$apply()
      },
      changeHomeAddress (e) {
        this.homeAddress = e.detail.value
        this.$apply()
      },
      chooseAddress () {
        this.getLocation()
      },
      changeChoosed (e) {
        let Idx = e.currentTarget.dataset.idx
        this.addRoomList[Idx].choosed = !this.addRoomList[Idx].choosed
        this.$apply()
      },
      addRoom () {
        wepy.navigateTo({
          url: './addRoom'
        })
        // wepy.navigateBack()
      },
      createHome () {
        let ifEmpty = true
        let choosedRoom = []
        if (!this.homeName || this.homeName.trim() === '') {
          this.$invoke('toast', 'show', {
            title: '请输入家的名称！',
            img: '../images/icons/attention.png'
          })
          return false
        }
        if (!this.homeAddress || this.homeAddress.trim() === '') {
          this.$invoke('toast', 'show', {
            title: '请选择家的地址！',
            img: '../images/icons/attention.png'
          })
          return false
        }
        this.addRoomList.map((item, idx) => {
          if (item.choosed) {
            choosedRoom.push(item)
            ifEmpty = false
          }
        })
        if (ifEmpty) {
          this.$invoke('toast', 'show', {
            title: '请至少选择一个房间！',
            img: '../images/icons/attention.png'
          })
          return false
        }
        wepy.showLoading({
          title: '加载中'
        })
        return new Promise((resolve, reject) => {
          wepy.request({
            url: this.urlPre + '/home',
            data: {
              home: [{'home_name': this.homeName, 'faddress': this.homeAddress, 'register_id': this.$parent.globalData.register_id}],
              house_member: choosedRoom
            },
            method: 'POST'
          }).then((res) => {
            switch (res.data.code) {
              case 1:
                wepy.hideLoading()
                wepy.showToast({
                  title: '创建成功!',
                  icon: 'success'
                })
                if (this.createFrom === '0') {
                  // debugger
                  this.setDefaultHome(res.data.home_id)
                  this.getBindingStatus(this.$parent.globalData.openid)
                } else {
                  // debugger
                  wepy.navigateBack()
                  // this.$navigate('./my/homeList')
                }
                resolve(res)
                break
              default:
                wepy.hideLoading()
                this.$invoke('toast', 'show', {
                  title: res.data.message,
                  img: '../images/icons/attention.png'
                })
            }
          }).catch((res) => {
            console.log(res)
            wepy.hideLoading()
            this.$invoke('toast', 'show', {
              title: '服务器繁忙！',
              img: '../images/icons/attention.png'
            })
          })
        })
      }
    }

    // self fun
    getBindingStatus (Openid) {
      wepy.showLoading({
        title: '加载中'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/userInfo?open_id=' + Openid, // 'oGm3u0FHjaAt6vFemoB3XF39RHbE'
          method: 'GET'
        }).then((res) => {
          console.log(res)
          resolve(res.data.openid)
          switch (res.data.code) {
            case 1:
              wepy.hideLoading()
              // let NewNickNameInfo = {
              //   type: 'nickName',
              //   newInfo: res.data.userInfo.wx_name
              // }
              let NewPhoneInfo = {
                type: 'phone',
                newInfo: res.data.userInfo.ftelephone
              }
              let NewAvatarInfo = {
                type: 'avatarUrl',
                newInfo: res.data.userInfo.wx_pic
              }
              // this.methods.wxUserInfo(NewNickNameInfo)
              this.methods.wxUserInfo(NewPhoneInfo)
              this.methods.wxUserInfo(NewAvatarInfo)
              this.$parent.globalData.register_id = res.data.userInfo.id
              // this.getUserHomeList(res.data.userInfo.id)
              this.$apply()
              resolve(res)
              break
            case 0: // 未绑定手机号
              wepy.hideLoading()
              this.$navigate('./sign')
              break
            default:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../images/icons/attention.png'
          })
        })
      })
    }
    // 获取默认房间列表
    getDefaultRoomList () {
      wepy.showLoading({
        title: '加载中'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/house_default',
          data: {
          },
          method: 'GET'
        }).then((res) => {
          switch (res.data.code) {
            case 1:
              let defaultRoomList = []
              res.data.houseListDefault.map((item, idx) => {
                let obj = {
                  house_name: item.dhouse_name,
                  choosed: true
                }
                defaultRoomList.push(obj)
              })
              console.log('defaultRoomList--------------------------')
              console.log(defaultRoomList)
              this.methods.changeAddRoomList(defaultRoomList)
              wepy.hideLoading()
              resolve(res)
              break
            default:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '获取默认房间失败！',
                img: '../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../images/icons/attention.png'
          })
        })
      })
    }

    // 第一个家默认当前家
    setDefaultHome (ID) {
      wepy.showLoading({
        title: '加载中'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: encodeURI(this.urlPre + '/home?id=' + ID + '&home_name=' + this.homeName + '&faddress=' + this.homeAddress + '&isdefault=1' + '&register_id=' + this.$parent.globalData.register_id),
          data: {
          },
          method: 'PUT'
        }).then((res) => {
          switch (res.data.code) {
            case 1:
              wepy.hideLoading()
              wepy.showToast({
                title: '设置成功!',
                icon: 'success'
              })
              this.getUserHomeList()
              this.$switch('./index')
              resolve(res)
              break
            default:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '设置失败！',
                img: '../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../images/icons/attention.png'
          })
        })
      })
    }
    // 获取用户家庭列表
    getUserHomeList () {
      wepy.showLoading({
        title: '加载中'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/home?register_id=' + this.$parent.globalData.register_id,
          method: 'GET'
        }).then((res) => {
          console.log(res)
          switch (res.data.code) {
            case 1:
              wepy.hideLoading()
              if (res.data.homeList.length > 0) { // 已创建家的进入首页，否则先创建家
                this.methods.updateHomeList(res.data.homeList)
                res.data.homeList.map((item, idx) => {
                  // item.isCreater = item.register_id === this.$parent.globalData.register_id ? true : false
                  item.isCreater = item.register_id === this.$parent.globalData.register_id
                  if (item.isdefault === '1') {
                    console.log('isdefault==1---------------')
                    console.log(item)
                    this.methods.updateCurHome(item)
                    this.$switch('./index')
                  }
                })
              } else {
                this.$redirect('./readyToCreate')
              }
              resolve(res)
              break
            default:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../images/icons/attention.png'
          })
        })
      })
    }
    // 再次地理位置授权
    authoration () {
      return new Promise((resolve, reject) => {
        wepy.getSetting({
        }).then((res) => {
          console.log('getSetting...', res)
          if (res.authSetting['scope.userLocation'] === true) {
            this.authored = true
            this.$apply()
            console.log('用户已开启定位授权')
          } else {
            this.getLocation()
          }
          resolve(res)
        }).catch((res) => {
          console.log(res)
        })
      })
    }

    getLocation () {
      return new Promise((resolve, reject) => {
        wepy.chooseLocation({
        }).then((res) => {
          console.log(res)
          this.homeAddress = res.address
          this.$apply()
          resolve(res)
        }).catch((res) => {
          console.log(res)
        })
      })
    }

    events = {
    }

    onLoad (options) {
      // 0-初次创建 1-列表页创建
      this.getDefaultRoomList()
      this.createFrom = options.createFrom
      this.authoration()
    }
  }
</script>
