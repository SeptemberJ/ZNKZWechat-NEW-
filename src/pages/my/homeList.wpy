<style lang="less">
page{
  background: #efefef;
  font-size: 30rpx;
  .my{
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    .addBar{
      width: 100%;
      height: 100rpx;
      background: #fff;
      justify-content: flex-end;
      align-items: center;
      position: fixed;
      top: 0;
      left: 0;
      box-shadow: 0px 5px 5px #888888;
    }
    .userAccount{
      width: 710rpx;
      height:200rpx;
      padding: 0 20rpx;
      margin-bottom: 20rpx;
      display: flex;
      align-items: center;
      justify-content: flex-start;
      background: #fff;
      .userInfo{
        width: 490rpx;
        height: 150rpx;
        padding-left: 20rpx;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        justify-content: space-around;
        .nickName{
          font-size: 32rpx;
          font-weight: bold;
        }
        .phone{
          color: #666;
        }
      }
      image{
        width: 50rpx;
        height: 50rpx;
      }
      .avatar{
        width: 150rpx;
        height: 150rpx;
        border-radius: 50%;
      }
    }
    .homeList{
      width: 100%;
      margin-top: 100rpx;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      justify-content: flex-start;
      .itemBar{
        width: e("calc(100% - 40rpx)");
        height:100rpx;
        padding: 0 20rpx;
        display: flex;
        align-items: center;
        justify-content: space-between;
        background: #fff;
        text{
          font-weight: bold;
          color: #333;
        }
        image{
          width: 50rpx;
          height: 50rpx;
        }
      }
    }
  }
}
</style>
<template>
  <view class='my'>
    <view class="addBar">
      <view class='TopSubmitBt'>
        <view class='TopFixedSubmitBt' @tap='toAddHome'>添加</view>
      </view>
    </view>
    <view class="homeList">
      <view class='itemBar' @tap="toHomeDetail({{homeItem.home_id}})" wx:for-items="{{homeList}}" wx:for-item="homeItem" wx:for-index="homeIdx" wx:key="homeIdx">
        <text>{{homeItem.home_name}}</text>
        <image src="../../images/icons/arrow-right.png"></image>
      </view>
    </view>
    <!-- <view class='blankBar'  style="width: 100%;height: 20rpx;"></view> -->
  <toast/>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Toast from 'wepy-com-toast'
  import testMixin from '../../mixins/test'
  import { updateHomeList, updateCurHome } from '../../store/actions'

  @connect({
    urlPre (state) {
      return state.counter.urlPre
    },
    homeList (state) {
      return state.counter.homeList
    },
    userInfo (state) {
      return state.counter.userInfo
    }
  }, {
    updateCurHome,
    updateHomeList
  })

  export default class My extends wepy.page {
    config = {
      navigationBarTitleText: '家列表'
    }
    components = {
      toast: Toast
    }

    mixins = [testMixin]

    data = {
    }

    computed = {
    }

    methods = {
      toHomeDetail (HomeId) {
        wepy.navigateTo({
          url: './homeSet?HomeId=' + HomeId
        })
        // this.$navigate('./homeSet?HomeId=' + HomeId)
      },
      toAddHome () {
        wepy.navigateTo({
          url: '../createHome?createFrom=1'
        })
        // this.$navigate('../createHome?createFrom=1')
      }
    }

    // self fun
    // 获取用户家庭列表
    getUserHomeList () {
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/home?register_id=' + this.$parent.globalData.register_id,
          method: 'GET'
        }).then((res) => {
          console.log(res)
          switch (res.data.code) {
            case 1:
              wepy.hideLoading()
              let ifHasDefaultHome = false
              if (res.data.homeList.length > 0) { // 已创建家的进入首页，否则先创建家
                this.methods.updateHomeList(res.data.homeList)
                res.data.homeList.map((item, idx) => {
                  if (item.isdefault === '1') {
                    ifHasDefaultHome = true
                    this.methods.updateCurHome(item)
                  }
                })
              } else {
                // 若没有家前去创建
                this.$redirect('../readyToCreate')
              }
              resolve({'homeList': res.data.homeList, 'ifHasDefaultHome': ifHasDefaultHome})
              break
            default:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '服务器繁忙！',
                img: '../../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../images/icons/attention.png'
          })
        })
      })
    }
    setDefaultHome (HomeId, HomeName, HomeAddress, HomeIsDefault) {
      return new Promise((resolve, reject) => {
        wepy.request({
          url: encodeURI(this.urlPre + '/home?id=' + HomeId + '&home_name=' + HomeName + '&faddress=' + HomeAddress + '&isdefault=' + HomeIsDefault + '&register_id=' + this.$parent.globalData.register_id),
          data: {
          },
          method: 'PUT'
        }).then((res) => {
          switch (res.data.code) {
            case 1:
              wepy.hideLoading()
              wepy.showToast({
                title: '修改成功!',
                icon: 'success'
              })
              // this.$emit('refreshHomeInfo-emit')
              resolve(res)
              break
            default:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '修改失败！',
                img: '../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../images/icons/attention.png'
          })
        })
      })
    }
    // 获取家列表信息
    async homeInfoAsync () {
      const backInfo = await this.getUserHomeList()
      console.log('IfHasDefaultHome------------[')
      if (!backInfo.ifHasDefaultHome) {
        this.setDefaultHome(backInfo.homeList[0].home_id, backInfo.homeList[0].home_name, backInfo.homeList[0].faddress, 1)
        this.methods.updateCurHome(backInfo.homeList[0])
      }
    }
    events = {
    }

    onShow (options) {
      console.log('list onshaow---------------------------')
      this.homeInfoAsync()
      // if (options.ifRefresh) {
      //   this.homeInfoAsync()
      // }
    }
  }
</script>
