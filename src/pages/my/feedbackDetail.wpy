<style lang="less">
page{
  background: #efefef;
  font-size: 30rpx;
  .feedBack{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    .problems{
      width: e("calc(100% - 40rpx)");
      padding: 20rpx;
      margin-top: 20rpx;
      height: 250rpx;
      background: #fff;
    }
    .answer{
      width: e("calc(100% - 40rpx)");
      padding: 20rpx;
      margin-top: 20rpx;
      height: 250rpx;
      background: #fff;
    }
    .add_bt{
      width: 60%;
      margin-top: 20rpx;
      text-align: center;
      line-height: 100rpx;
      background: #3498db;
      font-size: 32rpx;
      font-weight: bold;
      color: #fff;
      margin: 20px auto auto auto;
      border-radius: 15rpx;

    }
  }
}
</style>
<template>
  <view class='feedBack'>
    <view class='problems'>
      <textarea placeholder="请详细描述您的问题活不满，例如您在做什么时遇到了问题。希望我们有什么功能等。(最多150个字)" maxlength='150' auto-focus />
    </view>
    <text wx:if="{{type == 1}}" style="margin:20rpx">回复</text>
    <view wx:if="{{type == 1}}" class="answer">
      <text>请详细描述您的问题活不满，例如您在做什么时遇到了问题。希望我们有什么功能等。(最多150个字)</text>
    </view>
    <view wx:if="{{type == 0}}" class='add_bt' @tap="toAdd">确认添加</view>
  <toast/>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Toast from 'wepy-com-toast'
  import testMixin from '../../mixins/test'

  @connect({
    userInfo (state) {
      return state.counter.userInfo
    },
    urlPre (state) {
      return state.counter.urlPre
    }
  }, {
  })

  export default class My extends wepy.page {
    config = {
      navigationBarTitleText: '填写反馈'
    }
    components = {
      toast: Toast
    }

    mixins = [testMixin]

    data = {
      type: null // 0-新增 1-查看
    }

    computed = {
    }

    methods = {
      changeMemberPhone (e) {
        this.memberPhone = e.detail.value
        this.$apply()
      },
      toAdd () {
        if (this.memberPhone === this.userInfo.phone) {
          this.$invoke('toast', 'show', {
            title: '请输入除了管理员以外的用户手机号！',
            img: '../../images/icons/attention.png'
          })
        } else {
          this.searchMmeber()
        }
      }

    }

    // sefl fun
    searchMmeber () {
      wepy.showLoading({
        title: '加载中...'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/homeMember?mobile=' + this.memberPhone + '&home_id=' + this.homeId,
          data: {
          },
          method: 'POST'
        }).then((res) => {
          switch (res.data.code) {
            case 1:
              wepy.hideLoading()
              wepy.showToast({
                title: '添加成功!',
                icon: 'success'
              })
              wepy.navigateBack()
              resolve(res)
              break
            default:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '添加失败！',
                img: '../../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../images/icons/attention.png'
          })
        })
      })
    }

    events = {
    }
    onLoad (options) {
      // options.feedBackId
      this.type = options.type
    }
  }
</script>
