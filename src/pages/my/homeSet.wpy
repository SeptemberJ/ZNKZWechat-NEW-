<style lang="less">
page{
  background: #efefef;
  font-size: 30rpx;
  .homeList{
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    .itemBar{
      width: e("calc(100% - 40rpx)");
      height:100rpx;
      padding: 0 20rpx;
      display: flex;
      align-items: center;
      justify-content: space-between;
      background: #fff;
      text{
        font-weight: bold;
        color: #333;
      }
      image{
        width: 50rpx;
        height: 50rpx;
      }
      .memberRole{
        color: #666;
        font-weight: normal;
      }
      .incidentalText{
        display: flex;
        flex-grow: 1;
        justify-content: flex-end;
        font-weight: normal;
        color: #666;
      }
    }
    &_columnTit{
      width: e("calc(100% - 40rpx)");
      height: 100rpx;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 20rpx;
      color: #666;
      .columnItem{
        display: flex;
        align-items: center;
      }
      image{
        width: 50rpx;
        height: 50rpx;
      }
    }
    .memberBar{
      height: 150rpx;
    }
    &_member{
      padding-left: 20rpx;
      display: flex;
      flex-grow: 1;
      flex-direction: column;
      align-items: flex-start;
      justify-content: space-between;
      .memberPhone{
        font-size: 28rpx;
        font-weight: normal !important;
        color: #666 !important;
      }
    }
    .memberAvatar{
      width: 80rpx !important;
      height: 80rpx !important;
      border-radius: 50%;
    }
    .hasTopBorder{
      border-top: 1px solid #efefef;
    }
    &_bt{
      width: 100%;
      position: fixed;
      left: 0;
      bottom:0;
      margin-top: 200px;
      text-align: center;
      line-height: 100rpx;
      background: red;
      font-size: 32rpx;
      color: #fff;
      margin: 20px auto auto auto;
      border-radius: 0rpx;
    }
    .theLast{
      margin-bottom: 140rpx;
    }
  }
}
</style>
<template>
  <view class='homeList'>
    <view class='blankBar'  style="width: 100%;height: 20rpx;"></view>

    <view class='itemBar'>
      <text>家庭名称</text>
      <text @tap="modifyHomeName" class='incidentalText'>{{homeName}}</text>
      <image @tap="modifyHomeName" src="../../images/icons/arrow-right.png"></image>
    </view>
    <view class='itemBar'>
      <text>房间个数</text>
      <text class='incidentalText'>{{roomNumber}}</text>
      <image style="opacity: 0" src="../../images/icons/arrow-right.png"></image>
    </view>

    <view class='itemBar'>
      <text>家庭位置</text>
      <text @tap="modifyHomeAddress" class='incidentalText'>{{homeAddress}}</text>
      <image @tap="modifyHomeAddress" src="../../images/icons/arrow-right.png"></image>
    </view>

    <view class='homeList_columnTit'>
      <view class='columnItem'><text>家庭成员：</text></view>
      <view class='columnItem' @tap="addMember"><image src='../../images/icons/add.png'></image><text style='color:#3498db;'>添加</text></view>
    </view>

    <!-- memberList -->
    <view  class="itemBar memberBar hasTopBorder {{Idx == memberList.length-1?'theLast':''}}" wx:for-items="{{memberList}}" wx:for-item="member" wx:key="Idx" wx:for-index="Idx">
      <image class='memberAvatar' src="{{member.wx_pic}}"></image>
      <view class='homeList_member'>
        <text>{{member.wx_name}}</text>
        <text class='memberPhone'>{{member.ftelephone}}</text>
      </view>
      <text wx:if="{{member.ismanager == 1}}" class='memberRole'>管理员</text>
      <image wx:if="{{member.ismanager == 0}}" @tap="setMember" data-avatar="{{member.wx_pic}}" data-name="{{member.wx_name}}" data-phone="{{member.ftelephone}}" data-registeridm="{{member.id}}" src="../../images/icons/arrow-right.png"></image>
    </view>

    <view class='homeList_bt' @tap="deleteHome">移除家庭</view>

    <ModifyModal :modifyType.sync="modifyType" :ifShow.sync="ifModify" :newModifyContent.sync="newModifyContent"  wx:if="{{ifModify}}" :modifyTit.sync="modifyTit"></ModifyModal>

  <toast/>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Toast from 'wepy-com-toast'
  import testMixin from '../../mixins/test'
  import ModifyModal from '../../components/Modify'
  import { updateHomeList, updateCurHome } from '../../store/actions'

  @connect({
    urlPre (state) {
      return state.counter.urlPre
    },
    homeList (state) {
      return state.counter.homeList
    },
    userInfo (state) {
      return state.counter.userInfo
    }
  }, {
    updateCurHome,
    updateHomeList
  })

  export default class My extends wepy.page {
    config = {
      navigationBarTitleText: '家庭列表'
    }
    components = {
      toast: Toast,
      ModifyModal: ModifyModal
    }

    mixins = [testMixin]

    data = {
      modifyTit: null,
      modifyType: 0,
      ifModify: false,
      newModifyContent: '',
      registerId: null,
      homeId: null,
      homeRegisterId: null,
      homeIsDefault: null,
      homeName: null,
      roomNumber: 0,
      homeAddress: null,
      memberList: [],
      memberList2: [
        {
          name: '张三',
          avatarUrl: 'https://i.loli.net/2017/08/21/599a521472424.jpg',
          phone: '18234567899',
          room: [
            {roomName: '书房', roomId: 0, equipments: [{eqName: '书房设备1', eqId: 0}, {eqName: '书房设备2', eqId: 2}]},
            {roomName: '客厅', roomId: 0, equipments: [{eqName: '客厅设备1', eqId: 0}, {eqName: '客厅设备2', eqId: 2}]}
          ]
        }
      ]
    }

    watch = {
      newModifyContent (curVal, oldVal) {
        console.log('curVal--------------')
        console.log(curVal)
      }
    }

    computed = {
    }

    methods = {
      setMember (e) {
        console.log('setMember-------------------')
        wepy.navigateTo({
          url: './member?avatar=' + e.currentTarget.dataset.avatar + '&name=' + e.currentTarget.dataset.name + '&phone=' + e.currentTarget.dataset.phone + '&HomeId=' + this.homeId + '&registerId=' + this.registerId + '&MemberRegisterId=' + e.currentTarget.dataset.registeridm + '&homeRegisterId=' + this.homeRegisterId
        })
      },
      addMember () {
        wepy.navigateTo({
          url: './searchMember?HomeId=' + this.homeId
        })
      },
      modifyHomeName () {
        this.modifyType = 0
        this.modifyTit = '家名称'
        this.ifModify = true
        this.$apply()
      },
      modifyHomeAddress () {
        this.modifyType = 1
        this.modifyTit = '家地址'
        this.ifModify = true
        this.$apply()
      },
      deleteHome () {
        return new Promise((resolve, reject) => {
          wepy.showModal({
            title: '提示',
            content: '确定删除该家?'
          }).then((res) => {
            if (res.confirm) {
              console.log('用户点击确定')
              this.sureDelete()
            } else if (res.cancel) {
              console.log('用户点击取消')
            }
            resolve(res)
          }).catch((res) => {
            console.log(res)
          })
        })
      }
    }
    // sefl fun
    sureDelete () {
      wepy.showLoading({
        title: '加载中...'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/home?register_id=' + this.$parent.globalData.register_id + '&home_id=' + this.homeId,
          data: {
          },
          method: 'DELETE'
        }).then((res) => {
          switch (res.data.code) {
            case 1:
              wepy.hideLoading()
              wepy.showToast({
                title: '删除成功!',
                icon: 'success'
              })
              wepy.navigateBack()
              // this.$navigate('./homeList?ifRefresh=true')
              resolve(res)
              break
            default:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '删除失败！',
                img: '../../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../images/icons/attention.png'
          })
        })
      })
    }
    // 家信息
    getHomeInfo (HomeId) {
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/homeDetail?id=' + HomeId,
          method: 'GET'
        }).then((res) => {
          resolve(res.data)
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../../images/icons/attention.png'
          })
        })
      })
    }
    // 成员
    getMemberList (HomeId) {
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/homeMember?home_id=' + HomeId,
          method: 'GET'
        }).then((res) => {
          resolve(res.data.homeList)
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../../images/icons/attention.png'
          })
        })
      })
    }
    // 获取信息
    async homeInfoAsync (HomeId) {
      const ResHomeInfo = await this.getHomeInfo(HomeId)
      const ResMemberList = await this.getMemberList(HomeId)
      this.homeIsDefault = 1
      this.homeName = ResHomeInfo.home.home_name
      this.roomNumber = ResHomeInfo.houseCount
      this.homeAddress = ResHomeInfo.home.faddress
      this.homeRegisterId = ResHomeInfo.home.register_id
      this.memberList = ResMemberList
      this.$apply()
    }

    events = {
      refreshHomeInfo () {
        console.log('refreshHomeInfo---------------------')
        this.homeInfoAsync(this.homeId)
      },
      'refreshHomeInfo-emit': (...args) => {
        console.log('refreshHomeInfo-emit---------------------')
        this.homeInfoAsync(this.homeId)
      }
    }
    onLoad(options) {
      this.registerId = this.$parent.globalData.register_id
      this.homeId = options.HomeId
      this.$apply()
      this.homeInfoAsync(options.HomeId)
    }
    onShow () {
      if (this.homeId) {
        this.homeInfoAsync(this.homeId)
      }
    }
  }
</script>
