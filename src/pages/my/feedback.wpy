<style lang="less">
page{
  background: #efefef;
  font-size: 30rpx;
  .feedBack{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    .feedBackList{
      width: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: flex-start;
      margin-top: 20rpx;
      margin-bottom: 120rpx;
      .feedBackItem{
        width: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
        margin-bottom: 20rpx;
        background: #fff;
        text{
          padding: 20rpx;
        }
      }
    }
    .toWriteFeedBack{
      width: 100%;
      height: 100rpx;
      position: fixed;
      left: 0;
      bottom: 0;
      text-align: center;
      line-height: 100rpx;
      background: #3498db;
      font-size: 32rpx;
      font-weight: bold;
      color: #fff;
    }
    .add_bt{
      width: 60%;
      text-align: center;
      line-height: 100rpx;
      background: #3498db;
      font-size: 32rpx;
      font-weight: bold;
      color: #fff;
      margin: 20px auto auto auto;
      border-radius: 15rpx;

    }
  }
}
</style>
<template>
  <view class='feedBack'>
    <view class='feedBackList'>
      <view @tap="toDetail({{feedBack.id}})" class="feedBackItem" wx:for-items="{{feedBack}}"  wx:for-item="feedBack"  wx:for-index="feedBackIdx" wx:key="feedBackIdx">
        <text>{{feedBack.date}}</text>
        <text>{{feedBack.problem}}</text>
      </view>
    </view>
  <toast/>
  <view class="toWriteFeedBack" @tap="toAdd">填写反馈</view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Toast from 'wepy-com-toast'
  import testMixin from '../../mixins/test'

  @connect({
    userInfo (state) {
      return state.counter.userInfo
    },
    urlPre (state) {
      return state.counter.urlPre
    }
  }, {
  })

  export default class My extends wepy.page {
    config = {
      navigationBarTitleText: '反馈列表'
    }
    components = {
      toast: Toast
    }

    mixins = [testMixin]

    data = {
      feedBack: [{'id': 0, date: '2018-09-01', problem: '问题内容问题内容问题内容问题内容问题内容问题内容123问题内容', answer: '解答内容'}, {'id': 1, date: '2018-09-01', problem: '问题内容', answer: '解答内容'}]
    }

    computed = {
    }

    methods = {
      toDetail (ID) {
        wepy.navigateTo({
          url: './feedbackDetail?feedBackId=' + ID + '&type=1'
        })
      },
      toAdd () {
        wepy.navigateTo({
          url: './feedbackDetail?type=0'
        })
      }

    }

    // sefl fun
    searchMmeber () {
      wepy.showLoading({
        title: '加载中...'
      })
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/homeMember?mobile=' + this.memberPhone + '&home_id=' + this.homeId,
          data: {
          },
          method: 'POST'
        }).then((res) => {
          switch (res.data.code) {
            case 1:
              wepy.hideLoading()
              wepy.showToast({
                title: '添加成功!',
                icon: 'success'
              })
              wepy.navigateBack()
              resolve(res)
              break
            default:
              wepy.hideLoading()
              this.$invoke('toast', 'show', {
                title: '添加失败！',
                img: '../../images/icons/attention.png'
              })
          }
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../images/icons/attention.png'
          })
        })
      })
    }

    events = {
    }
    onLoad (options) {
      this.homeId = options.HomeId
    }
  }
</script>
