<style lang="less">
page{
  background: #efefef;
  font-size: 30rpx;
  .Wrap{
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    .SecondControlTypeList{
      width: 100%;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      background: #fff;
      .SecondControlType{
        width: e("calc(100% - 40rpx)");
        height:100rpx;
        display: flex;
        align-items: center;
        justify-content: flex-start;
        padding: 0 20rpx;
        border-bottom: 1px solid #efefef;
        text{
          width: 100%;
          padding: 0 10rpx;
        }
        image{
          width: 50rpx;
          height: 50rpx;
        }
      }
    }
    .addBt{
      width: 200rpx;
      height: 80rpx;
      line-height: 80rpx;
      margin-top:40rpx;
    }
  }
}
</style>
<template>
  <view class='Wrap'>
    <view class='SecondControlTypeList'>
      <Empty :tipTitle.sync="tipTitle" wx:if="{{SecondControlTypeList.length == 0}}"></Empty>
      <view class="SecondControlType" wx:for-items="{{SecondControlTypeList}}" wx:for-item="SecondControlType" wx:key="Idx" wx:for-index="Idx" @tap="ToSecondControl({{SecondControlType.defalut_second_control_type}})">
        <image src="../../images/icons/arrow-right.png"></image>
        <text>{{SecondControlType.defalut_second_control_type}}</text>
        <image src="../../images/icons/arrow-right.png"></image>
      </view>
      <toast/>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Toast from 'wepy-com-toast'
  import testMixin from '../../mixins/test'
  import Empty from '../../components/empty'

  @connect({
    urlPre (state) {
      return state.counter.urlPre
    },
    curHome (state) {
      return state.counter.curHome
    },
    curRoom (state) {
      return state.counter.curRoom
    }
  }, {
  })

  export default class SecondControlType extends wepy.page {
    config = {
      navigationBarTitleText: '从控类型'
    }
    components = {
      toast: Toast,
      Empty: Empty
    }

    mixins = [testMixin]

    data = {
      tipTitle: '暂无从控，敬请期待',
      masterControlCode: null,
      SecondControlTypeList: []
    }

    computed = {
    }

    watch = {
    }

    methods = {
      ToSecondControl (Type) {
        this.$navigate('./SecondControl?Type=' + Type + '&MasterCode=' + this.masterControlCode)
      }
    }

    // self fun
    // 默认从控列表
    getMasterControlType () {
      return new Promise((resolve, reject) => {
        wepy.request({
          url: this.urlPre + '/secondControlDefault',
          method: 'GET'
        }).then((res) => {
          this.SecondControlTypeList = res.data.secondControlDefaultList
          this.$apply()
          resolve(res.data.openid)
        }).catch((res) => {
          console.log(res)
          wepy.hideLoading()
          this.$invoke('toast', 'show', {
            title: '服务器繁忙！',
            img: '../../../images/icons/attention.png'
          })
        })
      })
    }

    events = {
    }

    onLoad(options) {
      this.masterControlCode = options.MasterCode
      this.$apply()
      this.getMasterControlType()
    }
  }
</script>
